rogercampbell@MacBook-Air arc-dsl % pytest
======================================================================================================================================================================== test session starts ========================================================================================================================================================================
platform darwin -- Python 3.10.2, pytest-8.2.2, pluggy-1.5.0
rootdir: /Users/rogercampbell/Dev/arc-dsl
collected 560 items                                                                                                                                                                                                                                                                                                                                                 

test_dsl.py ................................................................F...............................................................................................                                                                                                                                                                                  [ 28%]
test_solvers.py ..........................F....................................................F....................................F.......................................F................................................................................................................................................................................ [ 88%]
...........................F.......................................                                                                                                                                                                                                                                                                                           [100%]

============================================================================================================================================================================= FAILURES ==============================================================================================================================================================================
___________________________________________________________________________________________________________________________________________________________________________ test_mpapply ____________________________________________________________________________________________________________________________________________________________________________

    def test_mpapply():
>       assert mpapply(
            lambda x, y: frozenset({(x, (i, j)) for _, (i, j) in y}),
            (3, 4),
            frozenset({frozenset({(1, (0, 0))}), frozenset({(1, (1, 1)), (1, (0, 1))})}),
        ) == ((3, (0, 0)), (4, (1, 1)), (4, (0, 1)))
E       assert ((3, (0, 1)),..., (4, (0, 0))) == ((3, (0, 0)),..., (4, (0, 1)))
E         
E         At index 0 diff: (3, (0, 1)) != (3, (0, 0))
E         Use -v to get more diff

test_dsl.py:356: AssertionError
___________________________________________________________________________________________________________________________________________________________________________ test_1b60fb0c ___________________________________________________________________________________________________________________________________________________________________________

    def test_1b60fb0c():
>       runSolver("1b60fb0c")

test_solvers.py:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

key = '1b60fb0c'

    def runSolver(key):
        task = train_challenges[key]
        train_inputs = [example["input"] for example in task["train"]]
        train_outputs = [example["output"] for example in task["train"]]
        solverFunction = globals()["solve_" + key]
        for i in range(len(train_inputs)):
            trainIn = train_inputs[i]
            trainIn = tuple(tuple(row) for row in trainIn)
            trainOut = train_outputs[i]
            solverOut = solverFunction(trainIn)
            solverOut = [list(inner_tuple) for inner_tuple in solverOut]
>           assert solverOut == trainOut
E           assert [[0, 0, 0, 0,... 1, ...], ...] == [[0, 0, 0, 0,... 1, ...], ...]
E             
E             At index 1 diff: [2, 0, 0, 1, 1, 1, 1, 1, 0, 0] != [0, 0, 0, 1, 1, 1, 1, 1, 0, 0]
E             Use -v to get more diff

test_solvers.py:21: AssertionError
___________________________________________________________________________________________________________________________________________________________________________ test_39e1d7f9 ___________________________________________________________________________________________________________________________________________________________________________

    def test_39e1d7f9():
>       runSolver("39e1d7f9")

test_solvers.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

key = '39e1d7f9'

    def runSolver(key):
        task = train_challenges[key]
        train_inputs = [example["input"] for example in task["train"]]
        train_outputs = [example["output"] for example in task["train"]]
        solverFunction = globals()["solve_" + key]
        for i in range(len(train_inputs)):
            trainIn = train_inputs[i]
            trainIn = tuple(tuple(row) for row in trainIn)
            trainOut = train_outputs[i]
            solverOut = solverFunction(trainIn)
            solverOut = [list(inner_tuple) for inner_tuple in solverOut]
>           assert solverOut == trainOut
E           assert [[0, 0, 0, 8,... 2, ...], ...] == [[4, 4, 4, 8,... 2, ...], ...]
E             
E             At index 0 diff: [0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 2, 2] != [4, 4, 4, 8, 4, 4, 4, 8, 4, 4, 4, 8, 0, 0, 0, 8, 0, 0, 0, 8, 4, 4, 4, 8, 2, 2, 2]
E             Use -v to get more diff

test_solvers.py:21: AssertionError
___________________________________________________________________________________________________________________________________________________________________________ test_4c5c2cf0 ___________________________________________________________________________________________________________________________________________________________________________

    def test_4c5c2cf0():
>       runSolver("4c5c2cf0")

test_solvers.py:489: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

key = '4c5c2cf0'

    def runSolver(key):
        task = train_challenges[key]
        train_inputs = [example["input"] for example in task["train"]]
        train_outputs = [example["output"] for example in task["train"]]
        solverFunction = globals()["solve_" + key]
        for i in range(len(train_inputs)):
            trainIn = train_inputs[i]
            trainIn = tuple(tuple(row) for row in trainIn)
            trainOut = train_outputs[i]
            solverOut = solverFunction(trainIn)
            solverOut = [list(inner_tuple) for inner_tuple in solverOut]
>           assert solverOut == trainOut
E           assert [[0, 0, 0, 0,... 0, ...], ...] == [[0, 0, 0, 0,... 0, ...], ...]
E             
E             At index 3 diff: [0, 0, 0, 0, 0, 0, 0, 8, 1, 8, 0, 0] != [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
E             Use -v to get more diff

test_solvers.py:21: AssertionError
___________________________________________________________________________________________________________________________________________________________________________ test_6a1e5592 ___________________________________________________________________________________________________________________________________________________________________________

    def test_6a1e5592():
>       runSolver("6a1e5592")

test_solvers.py:649: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

key = '6a1e5592'

    def runSolver(key):
        task = train_challenges[key]
        train_inputs = [example["input"] for example in task["train"]]
        train_outputs = [example["output"] for example in task["train"]]
        solverFunction = globals()["solve_" + key]
        for i in range(len(train_inputs)):
            trainIn = train_inputs[i]
            trainIn = tuple(tuple(row) for row in trainIn)
            trainOut = train_outputs[i]
            solverOut = solverFunction(trainIn)
            solverOut = [list(inner_tuple) for inner_tuple in solverOut]
>           assert solverOut == trainOut
E           assert [[2, 2, 2, 2,... 0, ...], ...] == [[2, 2, 2, 2,... 0, ...], ...]
E             
E             At index 0 diff: [2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] != [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
E             Use -v to get more diff

test_solvers.py:21: AssertionError
___________________________________________________________________________________________________________________________________________________________________________ test_e40b9e2f ___________________________________________________________________________________________________________________________________________________________________________

    def test_e40b9e2f():
>       runSolver("e40b9e2f")

test_solvers.py:1465: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

key = 'e40b9e2f'

    def runSolver(key):
        task = train_challenges[key]
        train_inputs = [example["input"] for example in task["train"]]
        train_outputs = [example["output"] for example in task["train"]]
        solverFunction = globals()["solve_" + key]
        for i in range(len(train_inputs)):
            trainIn = train_inputs[i]
            trainIn = tuple(tuple(row) for row in trainIn)
            trainOut = train_outputs[i]
            solverOut = solverFunction(trainIn)
            solverOut = [list(inner_tuple) for inner_tuple in solverOut]
>           assert solverOut == trainOut
E           assert [[0, 0, 0, 0,... 7, ...], ...] == [[0, 0, 0, 0,... 7, ...], ...]
E             
E             At index 3 diff: [0, 0, 0, 0, 7, 0, 0, 0, 0, 0] != [0, 0, 4, 0, 7, 0, 4, 0, 0, 0]
E             Use -v to get more diff

test_solvers.py:21: AssertionError
====================================================================================================================================================================== short test summary info ======================================================================================================================================================================
FAILED test_dsl.py::test_mpapply - assert ((3, (0, 1)),..., (4, (0, 0))) == ((3, (0, 0)),..., (4, (0, 1)))
FAILED test_solvers.py::test_1b60fb0c - assert [[0, 0, 0, 0,... 1, ...], ...] == [[0, 0, 0, 0,... 1, ...], ...]
FAILED test_solvers.py::test_39e1d7f9 - assert [[0, 0, 0, 8,... 2, ...], ...] == [[4, 4, 4, 8,... 2, ...], ...]
FAILED test_solvers.py::test_4c5c2cf0 - assert [[0, 0, 0, 0,... 0, ...], ...] == [[0, 0, 0, 0,... 0, ...], ...]
FAILED test_solvers.py::test_6a1e5592 - assert [[2, 2, 2, 2,... 0, ...], ...] == [[2, 2, 2, 2,... 0, ...], ...]
FAILED test_solvers.py::test_e40b9e2f - assert [[0, 0, 0, 0,... 7, ...], ...] == [[0, 0, 0, 0,... 7, ...], ...]
=================================================================================================================================================================== 6 failed, 554 passed in 5.62s ===================================================================================================================================================================
rogercampbell@MacBook-Air arc-dsl % 